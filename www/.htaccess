RewriteEngine on
#Подключаем к серверу модуль, позволяющий переопределять данные из адресной строки\
# Слежующие две строки мы определяем условия переопределения
RewriteCond %{REQUEST_FILENAME} !-f
#Переопределяем только в случае, если адресная строка не обращается к конкретному файлу
# например http://example.com/images/logo.jpg не будет переопределяться, а выведет содержимое файла logo.jpg
RewriteCond %{REQUEST_FILENAME} !-d
#Переопределяем только в случае, если адресная строка не обращается к конкретномой директории
# т.е. если адреснаая строка не имеет вид: http://example.com/blablabla/file_that_exists.php
# или http://example.com/blablabla/folder_that_exists/
# то срабатывает следующее правило переопределения адресной строки:
RewriteRule ^(.*)$ index.php?route=$1 [L,QSA]
#любые символы после http://example.com/ передаются ввиде GET параметра $_GET['route']
# на адрес http://example.com/index.php
# Т.е. запрос ввиде http://example.com/users/roma_fedyakin/ вызывает файл index.php в корне сайта
# и передает в этот файл $_GET['route'] = 'users/roma_fedyakin/';
# Таким образом, мы можем в файле index.php написать скрипт, который будет разбирать значение $_GET['route'],
# и, исходя из этих данных, подключать нужные файлы.
# В файле index.php мы можем написать скрипт, который поймет, что в данном случае нужно подключить файл, к примеру,
#users_controller.php, который, в свою очередь,
# найдет в базе данных запись с логином "roma_fedyakin" и передаст информацию в представление (view.php)
